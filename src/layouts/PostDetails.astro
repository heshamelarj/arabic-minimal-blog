---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Tag from "@components/Tag.astro";
import Datetime from "@components/Datetime";
import type { CollectionEntry } from "astro:content";
import { slugifyStr } from "@utils/slugify";
import ShareLinks from "@components/ShareLinks.astro";
import Disqus from "../components/Disqus.astro";

export interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const {
  title,
  author,
  description,
  ogImage,
  canonicalURL,
  pubDatetime,
  modDatetime,
  tags,
} = post.data;

const { Content } = await post.render();

const ogImageUrl = typeof ogImage === "string" ? ogImage : ogImage?.src;
const ogUrl = new URL(
  ogImageUrl ?? `/posts/${slugifyStr(title)}.png`,
  Astro.url.origin
).href;

const layoutProps = {
  title,
  author,
  description,
  pubDatetime,
  modDatetime,
  canonicalURL,
  ogImage: ogUrl,
  scrollSmooth: true,
};
---

<Layout {...layoutProps}>
  <Header />
  <div class="mx-auto flex w-full max-w-3xl justify-start px-2">
    <button
      class="focus-outline mb-2 mt-8 flex hover:opacity-75"
      onclick="history.back()"
    >
      <span>ارجع إلى</span>
      <svg xmlns="http://www.w3.org/2000/svg"
      ><path
        d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
      ></path>
      </svg>
    </button>
  </div>
  <main id="main-content">
    <h1 transition:name={slugifyStr(title)} class="post-title">{title}</h1>
    <i class="">{author}</i>

    <svg xmlns="http://www.w3.org/2000/svg" version="1.0" width=0.500000pt" height="0.500000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet">

      <g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#fffffff" stroke="none">
        <path d="M4560 5107 c-62 -21 -130 -67 -159 -108 -16 -21 -53 -93 -81 -159 l-53 -120 -41 0 c-56 -1 -117 -30 -155 -76 -23 -28 -255 -558 -803 -1834 -423 -987 -776 -1813 -784 -1836 -13 -36 -13 -69 4 -290 11 -137 18 -250 17 -252 -1 -1 -27 31 -58 72 -218 289 -451 432 -645 396 -129 -23 -208 -86 -370 -292 -171 -216 -269 -273 -403 -235 -54 16 -180 86 -186 104 -2 5 27 31 64 58 331 240 502 423 564 604 68 195 -44 417 -261 520 -73 34 -78 35 -195 36 -139 0 -217 -20 -325 -82 -80 -47 -213 -178 -259 -256 -141 -240 -121 -544 50 -794 16 -23 29 -45 29 -50 0 -9 -81 -62 -300 -196 -168 -103 -200 -132 -200 -183 0 -50 45 -94 96 -94 39 0 78 21 384 215 80 50 150 94 156 98 6 3 37 -14 70 -38 125 -94 275 -155 380 -155 163 1 318 100 475 302 84 108 177 206 214 225 45 24 124 19 181 -10 118 -61 215 -158 404 -407 82 -107 163 -209 180 -227 44 -45 88 -51 143 -21 23 13 185 140 358 280 l315 257 728 1708 c400 939 730 1710 732 1712 7 7 55 -42 71 -73 30 -58 14 -108 -82 -260 -193 -306 -278 -554 -300 -883 -9 -122 1 -154 51 -178 43 -20 83 -13 114 20 19 20 24 44 36 161 21 214 41 304 103 457 45 113 84 187 169 322 97 154 121 213 122 291 0 118 -50 220 -142 289 -29 21 -54 40 -56 40 -1 1 5 31 15 67 14 55 15 71 4 111 -8 25 -29 64 -48 87 l-35 40 53 128 c49 117 53 133 54 207 0 68 -4 89 -28 137 -32 65 -90 122 -156 151 -54 24 -161 31 -211 14z m114 -238 c13 -7 30 -24 36 -39 10 -24 5 -42 -36 -142 l-47 -116 -63 27 c-35 14 -64 30 -64 34 0 13 70 180 86 205 12 18 33 33 61 41 1 1 13 -4 27 -10z m-209 -494 c110 -48 204 -91 209 -95 9 -9 -434 -1060 -447 -1060 -5 0 -105 41 -223 92 -147 62 -213 96 -210 104 59 153 454 1053 461 1050 5 -2 100 -43 210 -91z m-520 -1255 c105 -45 193 -85 198 -89 4 -4 -209 -516 -474 -1137 -264 -621 -484 -1135 -487 -1143 -12 -31 -175 4 -294 64 -61 31 -158 101 -158 115 0 5 214 508 476 1117 262 609 482 1123 489 1140 12 29 17 32 37 24 13 -5 109 -46 213 -91z m-2815 -1645 c154 -79 199 -208 119 -340 -75 -125 -191 -236 -430 -415 l-134 -100 -17 22 c-66 88 -110 191 -128 302 -44 279 204 566 480 553 46 -2 88 -11 110 -22z m1798 -896 c23 -6 42 -15 42 -19 0 -4 -48 -47 -107 -95 l-108 -87 -7 88 c-4 49 -9 114 -11 146 l-5 56 77 -38 c42 -21 95 -44 119 -51z"/>
      </g>

    </svg>
    <Datetime
      pubDatetime={pubDatetime}
      modDatetime={modDatetime}
      size="lg"
      className="my-2"
    />

    <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <Content />
    </article>

    <ul class="my-8">
      {tags.map(tag => <Tag tag={slugifyStr(tag)} />)}
    </ul>

    <div
      class="flex flex-col-reverse items-center justify-between gap-6 sm:flex-row-reverse sm:items-end sm:gap-4"
    >
      <button
        id="back-to-top"
        class="focus-outline whitespace-nowrap py-1 hover:opacity-75"
      >

        <span>العودة إلى الأعلى</span>
        <svg xmlns="http://www.w3.org/2000/svg"  class="rotate-90">
          <path
            d="M13.293 6.293 7.586 12l5.707 5.707 1.414-1.414L10.414 12l4.293-4.293z"
            stroke="#FF6B01" fill="#FF6B01"></path>
        </svg>
      </button>

      <ShareLinks />


    </div>
    <Disqus/>
  </main>
  <Footer />
</Layout>

<style>
  main {
    @apply mx-auto w-full max-w-3xl px-4 pb-12;
  }
  .post-title {
    @apply text-2xl font-semibold text-skin-accent;
  }
</style>

<script is:inline>
  /** Attaches links to headings in the document,
   *  allowing sharing of sections easily */
  function addHeadingLinks() {
    let headings = Array.from(document.querySelectorAll("h2, h3, h4, h5, h6"));
    for (let heading of headings) {
      heading.classList.add("group")
      let link = document.createElement("a");
      link.innerText = "#";
      link.className = "heading-link hidden group-hover:inline-block ml-2";
      link.href = "#" + heading.id;
      link.ariaHidden = true;
      heading.appendChild(link);
    }
  }
  addHeadingLinks();

  /** Attaches copy buttons to code blocks in the document,
   * allowing users to copy code easily. */
  function attachCopyButtons() {
    let copyButtonLabel = "Copy";
    let codeBlocks = Array.from(document.querySelectorAll("pre"));

    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement("div");
      wrapper.style.position = "relative";

      let copyButton = document.createElement("button");
      copyButton.className =
        "copy-code absolute right-3 -top-3 rounded bg-skin-card px-2 py-1 text-xs leading-4 text-skin-base font-medium";
      copyButton.innerHTML = copyButtonLabel;
      codeBlock.setAttribute("tabindex", "0");
      codeBlock.appendChild(copyButton);

      // wrap codebock with relative parent element
      codeBlock.parentNode.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);

      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }

    async function copyCode(block, button) {
      let code = block.querySelector("code");
      let text = code.innerText;

      await navigator.clipboard.writeText(text);

      // visual feedback that task is completed
      button.innerText = "Copied";

      setTimeout(() => {
        button.innerText = copyButtonLabel;
      }, 700);
    }
  }
  attachCopyButtons();
  document.addEventListener("astro:after-swap", attachCopyButtons);

  /** Scrolls the document to the top when
   * the "Back to Top" button is clicked. */
  function backToTop() {
    document.querySelector("#back-to-top")?.addEventListener("click", () => {
      document.body.scrollTop = 0; // For Safari
      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
    });
  }
  backToTop();
  document.addEventListener("astro:after-swap", backToTop);
</script>
